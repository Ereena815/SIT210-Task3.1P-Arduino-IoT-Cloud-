#include "arduino_secrets.h"
/*
  Sketch generated by the Arduino IoT Cloud Thing "Ereena"
  https://create.arduino.cc/cloud/things/9bbf4a04-0cbd-413d-944b-33157657a184

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float temperature;
  bool led;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <DHT.h>

#define DHTPIN 4
#define DHTTYPE DHT22

DHT dht(DHTPIN, DHTTYPE);

void setup()
{
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500);

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);

  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
  */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  // Set the LED Pin as output
  pinMode(LED_BUILTIN, OUTPUT);
  // Set the DHT Pin as input
  pinMode(DHTPIN, INPUT);
  // Begin communication with DHT sensor
  dht.begin();

  Serial.println("***************************** TASK 3.1P ***************************");
  Serial.println("************************ TEMERATURE TEST **************************");
}

void loop()
{
  ArduinoCloud.update();

  // read value of temperature
  temperature = dht.readTemperature();

  // print the values on serial monitor
  Serial.print("Temperature: ");
  Serial.print(temperature);
  Serl.println(" C");

  // give a delay of 30 seconds
  delay(30000);
}

void onLedChange() 
{
  digitalWrite(LED_BUILTIN, led);
}
